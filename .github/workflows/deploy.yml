name: CI, SonarCloud Analysis and Deploy

on:
  push:
    branches:
      - main
      - dev
    paths:
      - 'ecommerce_backend/**'
      - 'ecommerce_frontend/**'
  pull_request:
    branches:
      - main
      - dev
    types: [opened, synchronize, reopened]
    paths:
      - 'ecommerce_backend/**'
      - 'ecommerce_frontend/**'

jobs:

  test-and-analyze-backend:
    name: Test and Analyze Django Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ecommerce_backend
    env:
      DEBUG: ${{ secrets.DEBUG }}
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
      RECAPTCHA_PRIVATE_KEY: ${{ secrets.RECAPTCHA_PRIVATE_KEY }}
      RECAPTCHA_PUBLIC_KEY: ${{ secrets.RECAPTCHA_PUBLIC_KEY }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Backend Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage 

      - name: Run Backend Tests and Generate Coverage
        run: |
          coverage run manage.py test
          coverage xml -o coverage-backend.xml

      - name: SonarCloud Scan Backend
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: ./ecommerce_backend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_BACKEND_TOKEN }}

  test-and-analyze-frontend:
    name: Test and Analyze React Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ecommerce_frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '24.0.1'

      - name: Install Frontend Dependencies
        run: npm i 

      - name: Run Frontend Tests and Generate Coverage
        run: npm test -- --coverage --watchAll=false

      - name: SonarCloud Scan Frontend
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: ./ecommerce_frontend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_FRONTEND_TOKEN }}


  deploy-backend:
    name: Deploy Django Backend to Render
    runs-on: ubuntu-latest
    needs: [test-and-analyze-backend]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Trigger Render Deploy Hook
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}

  deploy-frontend:
    name: Deploy React Frontend to Vercel
    runs-on: ubuntu-latest
    needs: [test-and-analyze-frontend]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4 
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
